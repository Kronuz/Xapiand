################################################################################
# __  __           _                 _
# \ \/ /__ _ _ __ (_) __ _ _ __   __| |
#  \  // _` | '_ \| |/ _` | '_ \ / _` |
#  /  \ (_| | |_) | | (_| | | | | (_| |
# /_/\_\__,_| .__/|_|\__,_|_| |_|\__,_|
#           |_|
#
# Build using:
# docker build -t dubalu/xapiand:latest contrib/docker/xapiand
# docker tag dubalu/xapiand:latest dubalu/xapiand:$(docker run --rm dubalu/xapiand:latest --version)
# docker push dubalu/xapiand

FROM dubalu/clang as builder

RUN apk add libuuid \
  && apk add --no-cache --virtual .build-deps \
    git \
    zlib-dev \
    # Xapian specific:
    make \
    autoconf \
    automake \
    libtool \
    perl \
    tcl \
    # Xapiand specific:
    ninja \
    cmake \
    util-linux-dev

# Build xapian using clang (from Kronuz git repo using layer cache buster)
ADD https://api.github.com/repos/Kronuz/xapian/git/refs/heads/RELEASE/1.4 xapian-version.json
RUN mkdir -p /usr/src \
  && git clone -b RELEASE/1.4 --single-branch --depth 1 "https://github.com/Kronuz/xapian.git" /usr/src/xapian \
  && cd /usr/src/xapian/xapian-core \
  && ./preautoreconf \
  && autoreconf --force --install -Im4 \
  && CC=clang CXX=clang++ ./configure \
    --disable-dependency-tracking \
    --disable-documentation \
    --enable-maintainer-mode \
    --prefix=/usr \
  && make install \
  && cp bin/xapian-inspect /usr/bin \
  && rm -rf /usr/src/xapian

# Build Xapiand using clang (from Kronuz git repo using layer cache buster)
ADD https://api.github.com/repos/Kronuz/Xapiand/git/refs/heads/master xapiand-version.json
RUN CONFIG="\
    -DCMAKE_INSTALL_PREFIX:PATH=/usr \
  " \
  && mkdir -p /usr/src \
  && git clone -b stable "https://github.com/Kronuz/Xapiand" /usr/src/Xapiand \
  && mkdir /usr/src/Xapiand/build \
  && cd /usr/src/Xapiand/build \
  && cmake -GNinja $CONFIG .. \
  && ninja install \
  && rm -rf /usr/src/Xapiand

RUN apk del .build-deps \
  && apk del build-clang

# Xapiand image
FROM alpine:3.8

MAINTAINER Kronuz

COPY --from=builder /usr /usr
COPY ./entrypoint.sh /

RUN apk add libuuid \
  && mkdir -p /var/db \
  && addgroup -S xapiand \
  && adduser -D -S -h /var/db/xapiand -s /sbin/nologin -G xapiand xapiand \
  && chmod +x /entrypoint.sh

EXPOSE 8880

ENTRYPOINT ["/entrypoint.sh"]
CMD ["-v"]
